# Workflow for building and deploying a Jekyll site to GitHub Pages
name: CI/CD jekyll site

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Run on every pull request
  pull_request:
    types: [opened, reopened, synchronize]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  schedule:
    # * is a special character in YAML so you have to quote this string
    # Generate from https://crontab.guru/
    #        ┌───────────── minute (0 - 59)
    #        │ ┌───────────── hour (0 - 23)
    #        │ │ ┌───────────── day of the month (1 - 31)
    #        │ │ │ ┌───────────── month (1 - 12 or JAN-DEC)
    #        │ │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
    #        │ │ │ │ │
    #        │ │ │ │ │
    #        │ │ │ │ │
    #        * * * * *
    - cron: "0 0 * * *"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: [2.7.4, 3.0, 3.1, 3.2, 3.2.2]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1.163.0
        with:
          ruby-version: ${{ matrix.version }}
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - name: Check rate limit
        run: |
          gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /rate_limit
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Build with Jekyll
        run: .github/build.sh
        env:
          JEKYLL_ENV: production
          JEKYLL_GITHUB_TOKEN: ${{ github.token }}
      - name: Debug output
        run: |
          tree _site
          cat _site/index.html
      - name: HTLMProofer
        run: .github/test.sh
        env:
          BASEURL: ${{ steps.pages.outputs.base_path }}
          HOSTURL: ${{ steps.pages.outputs.host }}

  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1.163.0
        with:
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
        with:
          enablement: true # Enable github pages if it's not
      - name: Build
        run: bundle exec jekyll build -s demo
        env:
          JEKYLL_ENV: production
          JEKYLL_GITHUB_TOKEN: ${{ github.token }}
      - name: HTMLProofer
        uses: athackst/htmlproofer-action@v0.3.0
        with:
          ignore_urls: |
            https://opensource.org/license/mit/
          swap_urls: |
            ^${{ steps.pages.outputs.base_path }}:
            ^.*${{ steps.pages.outputs.host }}${{ steps.pages.outputs.base_path }}:
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    if: github.ref == 'refs/heads/main' # Only deploy from the main branch
    needs: build
    permissions:
      pages: write
      id-token: write
      actions: read
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  success:
    if: always()
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - run: exit 1
        # see https://stackoverflow.com/a/67532120/4907315
        if: >-
          ${{
               contains(needs.*.result, 'failure')
            || contains(needs.*.result, 'cancelled')
          }}
      - run: echo "All steps completed successfully"
      - name: Check rate limit
        run: |
          gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /rate_limit
        env:
          GH_TOKEN: ${{ github.token }}
