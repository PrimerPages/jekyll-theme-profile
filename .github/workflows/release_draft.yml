name: Draft release PR

on:
  push:
    branches:
      - main  # Updates the PR only if it already exists
  workflow_dispatch:  # Manually trigger to create a new PR

jobs:
  update-release-draft:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for updating release notes
      pull-requests: write  # Required for modifying the PR
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4

      - name: Run Release Drafter
        id: release-draft
        uses: release-drafter/release-drafter@v6
        with:
          config-name: release-drafter.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get version and changelog info
        run: |
          VERSION=${{ steps.release-draft.outputs.tag_name }}
          VERSION=${VERSION#v} # Strip leading 'v' if present
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "${{ steps.release-draft.outputs.body }}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Check if a Release PR already exists
        id: check-pr
        run: |
          EXISTING_PR=$(gh pr list --state open --json url,headRefName --jq '.[] | select(.headRefName | startswith("release/v"))')
          if [ -n "$EXISTING_PR" ]; then
            PR_URL=$(echo "$EXISTING_PR" | jq -r '.url')
            EXISTING_BRANCH=$(echo "$EXISTING_PR" | jq -r '.headRefName')

            echo "PR_EXISTS=true" >> $GITHUB_ENV
            echo "PR_URL=$PR_URL" >> $GITHUB_ENV
            echo "EXISTING_BRANCH=$EXISTING_BRANCH" >> $GITHUB_ENV
          else
            echo "PR_EXISTS=false" >> $GITHUB_ENV
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Close old Release PR if the version changed
        if: env.PR_EXISTS == 'true' && env.EXISTING_BRANCH != format('release/v{0}', env.VERSION)
        run: |
          gh pr close "$PR_URL" --delete-branch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Update version
      - name: Update version
        run: |
          echo "$VERSION" > VERSION

      - name: Create or Update Release PR
        uses: peter-evans/create-pull-request@v5
        if: github.event_name == 'workflow_dispatch' || env.PR_EXISTS == 'true'
        with:
          branch: release/v${{ env.VERSION }}
          title: "Release v${{ env.VERSION }}"
          body: |
            Release version ${{ env.VERSION }}

            ${{ env.CHANGELOG }}
          commit-message: "Bump version to v${{ env.VERSION }}"
          delete-branch: true
