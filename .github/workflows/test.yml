# Workflow for building and deploying a Jekyll site to GitHub Pages
name: Test jekyll theme

on:
  # Run on every pull request
  pull_request:
    types: [opened, reopened, synchronize]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: [3, 3.0, 3.1, 3.2, 3.3]
        folder: ["", "demo"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1.207.0
        with:
          ruby-version: ${{ matrix.version }}
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - name: Check rate limit
        run: |
          gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /rate_limit
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        run: .github/build.sh
        env:
          JEKYLL_ENV: production
          JEKYLL_GITHUB_TOKEN: ${{ github.token }}
          JEKYLL_FOLDER: ${{ matrix.folder }}
          PAGES_REPO_NWO: ${{ github.repository }}
      - name: Debug output
        run: |
          tree _site
          cat _site/index.html
      - name: HTLMProofer
        run: .github/test.sh
        env:
          BASEURL: ${{ steps.pages.outputs.base_path }}
          HOSTURL: ${{ steps.pages.outputs.host }}

  success:
    if: always()
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - run: exit 1
        # see https://stackoverflow.com/a/67532120/4907315
        if: >-
          ${{
               contains(needs.*.result, 'failure')
            || contains(needs.*.result, 'cancelled')
          }}
      - run: echo "All steps completed successfully"
      - name: Check rate limit
        run: |
          gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /rate_limit
        env:
          GH_TOKEN: ${{ github.token }}
